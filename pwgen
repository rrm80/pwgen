#!/usr/bin/env python

'''pwgen - bash friendly no-bullshit simple password generator.
usage:
  pwgen [N]
  N    positive integer, length of generated password (default = 8)

The characters set from which the random password is generated includes numbers,
special characters, some alphabets (both cases) and some special characters. For
details, please see the source (it's really, stupidly simple Python 3).
'''

from os import urandom
from sys import argv, stdout, stderr, exit
from struct import unpack

charset = 'ABbcDdEeFfGgHhJjKMmNnPQqRrsTtuVwXz23456789_-.@$'
def on_arg_err(err = None):
	if err is not None:
		stderr.write('Error: {}'.format(err.__str__()))
		stderr.write('\n\n')
	stderr.write(__doc__)
	stderr.flush()
	exit(1)

def gen_randstr(n):
	return ''.join([
		charset[
			unpack('<L', urandom(4))[0] % len(charset)
		] for _ in range(0, n)
	])

if __name__ == '__main__':
	n = 8

	if len(argv) > 2:
		on_arg_err()
	elif len(argv) == 2:
		try: n = int(argv[1])
		except ValueError as e:
			on_arg_err(e)
		if n <= 0:
			on_arg_err(ValueError('N must be a positive integer.'))

	stdout.write(gen_randstr(n))
	if stdout.isatty():
		stdout.write('\n')
	stdout.flush()
	exit(0)
